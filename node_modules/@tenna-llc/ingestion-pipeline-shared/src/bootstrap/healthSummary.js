'use strict';

const QueueSummary = require('./queueSummary');

class HealthSummary {
    constructor({ lastProcessedThresholdMs = 10000 } = {}) {
        Object.assign(this, { queues: new Map(), _ok: true, _bunnyBusHealth: true, lastProcessedThresholdMs });
    }

    set ok(value) {
        if (!value) {
            this._ok = false;
        }
    }

    get ok() {
        return this._ok;
    }

    set bunnyBusHealth(value) {
        if (!value) {
            this.ok = this._bunnyBusHealth = false;
        }
    }

    get bunnyBusHealth() {
        return this._bunnyBusHealth;
    }

    getQueue(queueName) {
        return !this.queues.has(queueName)
            ? this.queues.set(queueName, new QueueSummary({ name: queueName, healthSummary: this })).get(queueName)
            : this.queues.get(queueName);
    }

    toPOCO() {
        return {
            queues: [...this.queues.values()].map((x) => x.toPOCO()),
            bunnyBus: {
                ok: this.bunnyBusHealth
            },
            ok: this.ok
        };
    }
}

module.exports = HealthSummary;
