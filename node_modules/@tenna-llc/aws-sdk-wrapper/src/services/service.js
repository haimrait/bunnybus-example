'use strict';

const AWS = require('aws-sdk');

/**
 * “Full Jitter”
 * as per https://aws.amazon.com/blogs/architecture/exponential-backoff-and-jitter/
 */
class Backoff {
    static get minDelay() {
        return 300;
    }

    static get maxDelay() {
        return 1000;
    }

    static random(min, max) {
        min = Math.ceil(min);
        max = Math.floor(max);
        return Math.floor(Math.random() * (max - min) + min);
    }

    static delay(attempt) {
        return Backoff.random(Backoff.minDelay, Math.min(Backoff.maxDelay, Math.pow(Backoff.minDelay, 2) * attempt));
    }
}

class Service {
    constructor(params = {}) {
        const options = {
            //defaults
            ...Service.defaults,
            // other options
            ...(params.config || {})
        };

        const config = new AWS.Config(options);

        Object.assign(this, { config, configOptions: options });
    }

    static get defaults() {
        return {
            // default to 3 retries
            maxRetries: 3,
            retryDelayOptions: { customBackoff: Backoff.delay }
        };
    }

    get logger() {
        return this.config.logger;
    }

    set logger(value) {
        this.config.logger = value;
    }
}

module.exports = Service;

module.exports.Backoff = Backoff;
