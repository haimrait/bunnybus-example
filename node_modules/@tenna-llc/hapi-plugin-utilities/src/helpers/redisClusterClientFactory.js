'use strict';

const Joi = require('@hapi/joi');
const BaseClientFactory = require('./baseClientFactory');

const schema = {
    add: Joi.object({
        name: Joi.string().required(),
        config: Joi.object({
            nodes: Joi.array().items(Joi.object()).optional(),
            options: Joi.object().unknown(true).optional()
        }).unknown(false)
    }).required()
};

class RedisClusterClientFactory extends BaseClientFactory {
    constructor() {
        super();
    }

    add(clientConfiguration) {
        const { error, value: validatedClientConfiguration } = schema.add.validate(clientConfiguration);

        if (error) {
            throw error;
        }

        super.add(validatedClientConfiguration);
    }

    build(name, optionsOverrides) {
        const Redis = require('ioredis');

        const { nodes = [], options = {} } = super.get(name) || {};
        return new Redis.Cluster(nodes, { ...options, ...optionsOverrides });
    }
}

module.exports = RedisClusterClientFactory;
