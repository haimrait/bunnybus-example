'use strict';

const { HealthProbes } = require('../helpers');

class HealthReporter {
    constructor({ server, options }) {
        Object.assign(this, { server, options, probes: new HealthProbes() });
    }

    configure() {
        this.server.expose(
            'healthReporter',
            {
                register: (...args) => {
                    const [{ name }] = args;
                    this.server.log(['debug'], `health probe (${name}) registered`);
                    return this.probes.register(...args);
                },
                count: (...args) => {
                    return this.probes.count(...args);
                }
            },
            { scope: true }
        );

        this.server.route({
            method: 'GET',
            path: this.options.paths.health,
            handler: (...args) => this.handler(...args),
            options: {
                tags: ['api'],
                description: 'returns top level version numbers for the project this plugin lives in'
            }
        });
    }

    async handler(request, h) {
        const result = await this.probes.scanAll();

        request.log(['debug'], result);

        return h.response(result).code(result.ok ? 200 : 500);
    }
}

module.exports = HealthReporter;
