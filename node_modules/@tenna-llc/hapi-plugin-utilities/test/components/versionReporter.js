'use strict';

const Lab = require('@hapi/lab');
const Code = require('@hapi/code');
const Proxyquire = require('proxyquire');

const { before, after, beforeEach, afterEach, describe, it } = (exports.lab = Lab.script());
const expect = Code.expect;

let versionReporter = null;

describe('Components', () => {
    describe('VersionReporter', () => {
        describe('_npmListDepthZero', () => {
            const VersionReporter = Proxyquire('../../src/components/versionReporter', {
                child_process: {
                    exec: (command, options, callback) => {
                        callback('fake error');
                    }
                }
            });

            beforeEach(async () => {
                versionReporter = new VersionReporter({});
            });

            it('should error with mock exec that throws fake error', async () => {
                let sut = null;

                try {
                    await versionReporter._npmListDepthZero();
                } catch (err) {
                    sut = err;
                }

                expect(sut).to.exist().and.to.be.an.error();
            });
        });
    });
});
