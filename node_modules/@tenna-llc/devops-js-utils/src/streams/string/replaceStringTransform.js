'use strict';

const { decode } = require('punycode');

const Transform = require('stream').Transform;

const defaults = {
    encoding: 'utf8',
    writableObjectMode: true,
    readableObjectMode: true
};

class ReplaceStringTransform extends Transform {
    constructor(options = {}) {
        super(Object.assign({}, options, defaults));
        this._searchPattern = options.searchPattern || '';
        this._newSubstring = options.newSubstring || '';
    }

    _transform(chunk, encoding, callback) {
        const decodedChunk = encoding === 'utf8' ? chunk : chunk.toString();

        this.push(this._searchPattern ? decodedChunk.replace(this._searchPattern, this._newSubstring) : decodedChunk);

        callback();
    }

    _flush(callback) {
        callback();
    }
}

module.exports = ReplaceStringTransform;
